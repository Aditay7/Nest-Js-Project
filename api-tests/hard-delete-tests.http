### Hard Delete (Permanent Deletion) Tests
@baseUrl = http://localhost:3000
@contentType = application/json
@authToken = Bearer YOUR_JWT_TOKEN_HERE

### Setup: Create test slots first

### 1. Create Test Slot 1
POST {{baseUrl}}/doctor/slots
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "date": "2025-08-25",
  "startTime": "10:00",
  "endTime": "11:00",
  "capacity": 1,
  "sessionType": "morning"
}

### 2. Create Test Slot 2
POST {{baseUrl}}/doctor/slots
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "date": "2025-08-25",
  "startTime": "14:00",
  "endTime": "15:00",
  "capacity": 1,
  "sessionType": "afternoon"
}

### 3. Create Test Slot 3
POST {{baseUrl}}/doctor/slots
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "date": "2025-08-25",
  "startTime": "16:00",
  "endTime": "17:00",
  "capacity": 1,
  "sessionType": "afternoon"
}

### 4. List All Slots (to get IDs)
GET {{baseUrl}}/doctor/slots?date=2025-08-25
Authorization: {{authToken}}

### Hard Delete Tests

### 5. Hard Delete Slot (Permanent Removal)
DELETE {{baseUrl}}/doctor/slots/1
Authorization: {{authToken}}

### 6. Verify Slot is Permanently Deleted (Should return 404 or not in list)
GET {{baseUrl}}/doctor/slots?date=2025-08-25
Authorization: {{authToken}}

### 7. Try to Access Deleted Slot (Should fail)
PATCH {{baseUrl}}/doctor/slots/1/status
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "isActive": true
}

### 8. Try to Update Deleted Slot (Should fail)
PATCH {{baseUrl}}/doctor/slots/1
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "capacity": 2
}

### Comparison: Soft Delete vs Hard Delete

### 9. Soft Delete a Slot (for comparison)
PATCH {{baseUrl}}/doctor/slots/2/status
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "isActive": false
}

### 10. Verify Soft Deleted Slot Still Exists in Database
GET {{baseUrl}}/doctor/slots?date=2025-08-25&includeInactive=true
Authorization: {{authToken}}

### 11. Re-enable Soft Deleted Slot (Should work)
PATCH {{baseUrl}}/doctor/slots/2/status
Content-Type: {{contentType}}
Authorization: {{authToken}}

{
  "isActive": true
}

### 12. Hard Delete Another Slot
DELETE {{baseUrl}}/doctor/slots/3
Authorization: {{authToken}}

### 13. Verify Hard Deleted Slot is Gone Forever
GET {{baseUrl}}/doctor/slots?date=2025-08-25&includeInactive=true
Authorization: {{authToken}}

### Error Cases

### 14. Try to Hard Delete Non-existent Slot (Should fail)
DELETE {{baseUrl}}/doctor/slots/999
Authorization: {{authToken}}

### 15. Try to Hard Delete Already Deleted Slot (Should fail)
DELETE {{baseUrl}}/doctor/slots/1
Authorization: {{authToken}}

### 16. Try to Hard Delete Without Authentication (Should fail)
DELETE {{baseUrl}}/doctor/slots/2

### 17. Try to Hard Delete Another Doctor's Slot (Should fail - if you have another doctor's slot ID)
DELETE {{baseUrl}}/doctor/slots/100
Authorization: {{authToken}}

### Data Verification

### 18. Final Check - List All Remaining Slots
GET {{baseUrl}}/doctor/slots?includeInactive=true
Authorization: {{authToken}}

### Expected Results:
# - Slot 1: Permanently deleted (not in any list)
# - Slot 2: Active (was soft deleted then re-enabled)
# - Slot 3: Permanently deleted (not in any list)

### Use Cases for Hard Delete:

# 1. **Data Cleanup**: Remove test or duplicate slots
# 2. **Compliance**: Meet data retention policies
# 3. **Storage Optimization**: Clean up old unused data
# 4. **Error Correction**: Remove incorrectly created slots

### ⚠️ Important Notes:
# - Hard delete cannot be undone
# - Use soft delete (PATCH /status) for most user operations
# - Hard delete should be used sparingly and with caution
# - Consider implementing additional confirmation for hard deletes in UI
